<?xml version="1.0" encoding="utf-8"?>
<CodeSnippets>
  <CodeSnippet Format="1.0.0">
    <Header>
      <Title>BlockerBlockee</Title>
      <Shortcut>BlockerBlockee</Shortcut>
      <Description />
      <Author />
      <SnippetTypes>
        <SnippetType>Expansion</SnippetType>
      </SnippetTypes>
    </Header>
    <Snippet>
      <Declarations />
      <Code Language="sql"><![CDATA[/*  Record Blocking Events  */

DECLARE @Interval INT = 60;
DECLARE @BlockingSpid INT;
DECLARE @BlockedSpid INT;
DECLARE @WaitTime INT; 
DECLARE @sql VARCHAR(MAX);
DECLARE @dbid INT;

/********************************/
/*  Find blockers and blockees  */
/********************************/

SELECT TOP 1
        @BlockingSpid = blocking_session_id ,
        @BlockedSpid = session_id ,
        @WaitTime = wait_time / 1000
FROM    sys.dm_exec_requests
WHERE   session_id > 50
        AND blocking_session_id <> 0
GROUP BY blocking_session_id ,
        session_id ,
        wait_time
ORDER BY ( wait_time / 1000 ) DESC; 

IF @BlockingSpid IS NOT NULL    -- If there is blocking for more than the tolerance, continue
    AND @BlockingSpid <> 0
    AND @WaitTime >= @Interval
    BEGIN

;
        WITH    Blocker
                  AS ( SELECT   sp.status 'BlockerStatus' ,
                                sp.cmd 'BlockerCommand' ,
                                ca1.text 'BlockingSql' ,
                                DB_NAME(sp.dbid) 'BlockingDatabase'
                       FROM     sys.sysprocesses sp WITH ( NOLOCK )
                                CROSS APPLY ( SELECT    text 'text'
                                              FROM      sys.dm_exec_sql_text(sp.sql_handle)
                                            ) ca1
                       WHERE    sp.spid = @BlockingSpid
                     ),
                Blockee
                  AS ( SELECT   sp.status 'BlockerStatus' ,
                                sp.cmd 'BlockerCommand' ,
                                ca1.text 'BlockedSql' ,
                                DB_NAME(sp.dbid) 'BlockedDatabase'
                       FROM     sys.sysprocesses sp WITH ( NOLOCK )
                                CROSS APPLY ( SELECT    text 'text'
                                              FROM      sys.dm_exec_sql_text(sp.sql_handle)
                                            ) ca1
                       WHERE    sp.spid = @BlockedSpid
                     )

            --INSERT [master].[dbo].[blockingTasks]
				SELECT  GETDATE() 'CreateDate' ,
                        @WaitTime 'WaitTimeMs' ,
                        @BlockingSpid 'BlockingSPID' ,
                        Blocker.* ,
                        @BlockedSpid 'BlockedSPID' ,
                        Blockee.*
                FROM    Blocker ,
                        Blockee;

    END;
	ELSE 
	begin
	SELECT 'No Blocking'
	END]]></Code>
    </Snippet>
  </CodeSnippet>
</CodeSnippets>